[{"/Users/hidayat/Desktop/time-management/src/index.js":"1","/Users/hidayat/Desktop/time-management/src/App.js":"2","/Users/hidayat/Desktop/time-management/src/reportWebVitals.js":"3","/Users/hidayat/Desktop/time-management/src/containers/Login/Login.js":"4","/Users/hidayat/Desktop/time-management/src/components/Navigation/Navigation.js":"5","/Users/hidayat/Desktop/time-management/src/components/NotFound/NotFound.js":"6","/Users/hidayat/Desktop/time-management/src/context/AuthContext.js":"7","/Users/hidayat/Desktop/time-management/src/containers/Registration/Registration.js":"8","/Users/hidayat/Desktop/time-management/src/PrivateRoute.js":"9","/Users/hidayat/Desktop/time-management/src/containers/RecordManagement/RecordManagement.js":"10","/Users/hidayat/Desktop/time-management/src/containers/RecordManagement/TimeManager/TimeManager.js":"11","/Users/hidayat/Desktop/time-management/src/containers/RecordManagement/ManagerData/ManagerData.js":"12"},{"size":594,"mtime":1612444610840,"results":"13","hashOfConfig":"14"},{"size":1559,"mtime":1613816828285,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1612361036524,"results":"16","hashOfConfig":"14"},{"size":2936,"mtime":1613816822814,"results":"17","hashOfConfig":"14"},{"size":1911,"mtime":1613831398280,"results":"18","hashOfConfig":"14"},{"size":391,"mtime":1613816838344,"results":"19","hashOfConfig":"14"},{"size":163,"mtime":1612607324868,"results":"20","hashOfConfig":"14"},{"size":3042,"mtime":1613816793150,"results":"21","hashOfConfig":"14"},{"size":690,"mtime":1613291812425,"results":"22","hashOfConfig":"14"},{"size":2021,"mtime":1613831761581,"results":"23","hashOfConfig":"14"},{"size":3314,"mtime":1613828162181,"results":"24","hashOfConfig":"14"},{"size":5245,"mtime":1613831663610,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"zv771h",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"/Users/hidayat/Desktop/time-management/src/index.js",[],["52","53"],"/Users/hidayat/Desktop/time-management/src/App.js",[],"/Users/hidayat/Desktop/time-management/src/reportWebVitals.js",[],"/Users/hidayat/Desktop/time-management/src/containers/Login/Login.js",[],"/Users/hidayat/Desktop/time-management/src/components/Navigation/Navigation.js",[],"/Users/hidayat/Desktop/time-management/src/components/NotFound/NotFound.js",[],"/Users/hidayat/Desktop/time-management/src/context/AuthContext.js",[],"/Users/hidayat/Desktop/time-management/src/containers/Registration/Registration.js",[],"/Users/hidayat/Desktop/time-management/src/PrivateRoute.js",[],"/Users/hidayat/Desktop/time-management/src/containers/RecordManagement/RecordManagement.js",[],"/Users/hidayat/Desktop/time-management/src/containers/RecordManagement/TimeManager/TimeManager.js",[],"/Users/hidayat/Desktop/time-management/src/containers/RecordManagement/ManagerData/ManagerData.js",["54"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport AuthContext from \"../../../context/AuthContext\";\nimport {\n  Table,\n  Input,\n  InputNumber,\n  Popconfirm,\n  Form,\n  Typography,\n  message,\n  Space,\n  Divider,\n  DatePicker,\n} from \"antd\";\nimport { FormOutlined, DeleteOutlined } from \"@ant-design/icons\";\n\nconst dateFormat = \"YYYY-MM-DD\";\n\nconst disabledDate = (current) => {\n  return current && current.valueOf() > Date.now();\n};\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  let inputNode = null;\n  if (dataIndex === \"workingHours\") {\n    inputNode = <InputNumber style={{ width: \"100%\" }} />;\n  } else if (dataIndex === \"date\") {\n    inputNode = <DatePicker format={dateFormat} disabledDate={disabledDate} />;\n  } else {\n    inputNode = <Input />;\n  }\n\n  return (\n    <td {...restProps}>\n      {editing ? (\n        <Form.Item\n          name={dataIndex}\n          style={{\n            margin: 0,\n          }}\n          rules={[\n            {\n              required: true,\n              message: `Please Input ${title}!`,\n            },\n          ]}\n        >\n          {inputNode}\n        </Form.Item>\n      ) : (\n        children\n      )}\n    </td>\n  );\n};\n\nconst ManagerData = (props) => {\n  const [form] = Form.useForm();\n  const [editingKey, setEditingKey] = useState(\"\");\n\n  const isEditing = (record) => record.id === editingKey;\n\n  const edit = (record) => {\n    form.setFieldsValue({\n      workName: record.workName,\n      workingHours: record.workingHours,\n      description: record.description,\n      date: moment(record.date),\n    });\n    setEditingKey(record.id);\n  };\n\n  const cancel = () => {\n    setEditingKey(\"\");\n  };\n\n  const save = async (record) => {\n    const hide = message.loading(\"Updating..\", 0);\n    const row = await form.validateFields();\n    const modifiedValues = {\n      ...row,\n      date: row.date.toDate().toLocaleDateString(\"en-CA\"),\n    };\n\n    let url = \"https://time-mgm-demo.getsandbox.com:443/records/\" + record.id;\n    axios\n      .put(url, modifiedValues)\n      .then((response) => {\n        hide();\n        setEditingKey(\"\");\n        props.fetchProp();\n        message.success(\"Successfully updated.\");\n      })\n      .catch((error) => {\n        hide();\n        setEditingKey(\"\");\n        console.log(error);\n        message.error(\"Something went wrong.\");\n      });\n  };\n\n  const deleteHandler = (key) => {\n    let url = \"https://time-mgm-demo.getsandbox.com:443/records/\" + key;\n    axios\n      .delete(url)\n      .then((response) => {\n        message.success(\"Successfully removed.\");\n        props.fetchProp();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const columns = [\n    {\n      title: \"Work name\",\n      dataIndex: \"workName\",\n      key: \"name\",\n      editable: true,\n      width: \"20%\",\n      render: (text) => <Typography.Link>{text}</Typography.Link>,\n    },\n    {\n      title: \"Hours\",\n      dataIndex: \"workingHours\",\n      key: \"hours\",\n      editable: true,\n      width: \"8%\",\n    },\n    {\n      title: \"Description\",\n      dataIndex: \"description\",\n      key: \"description\",\n      editable: true,\n      width: \"35%\",\n    },\n    {\n      title: \"Date\",\n      dataIndex: \"date\",\n      key: \"date\",\n      editable: true,\n      width: \"15%\",\n    },\n    {\n      dataIndex: \"operation\",\n      width: \"5%\",\n      render: (_, record) => {\n        const editable = isEditing(record);\n        return editable ? (\n          <Space>\n            <Typography.Link onClick={() => save(record)}>Save</Typography.Link>\n            <Divider type=\"vertical\" />\n            <Typography.Link onClick={cancel}>Cancel</Typography.Link>\n          </Space>\n        ) : (\n          <Space size=\"small\">\n            <Typography.Link\n              disabled={editingKey !== \"\"}\n              onClick={() => edit(record)}\n            >\n              <FormOutlined style={{ fontSize: \"1.1rem\" }} />\n            </Typography.Link>\n            <Divider type=\"vertical\" />\n            <Popconfirm\n              title=\"Sure to delete?\"\n              onConfirm={() => deleteHandler(record.id)}\n            >\n              <Typography.Link>\n                <DeleteOutlined style={{ fontSize: \"1.1rem\" }} />\n              </Typography.Link>\n            </Popconfirm>\n          </Space>\n        );\n      },\n    },\n  ];\n  const mergedColumns = columns.map((col) => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return {\n      ...col,\n      onCell: (record) => ({\n        record,\n        inputType: col.dataIndex === \"workingHours\" ? \"number\" : \"text\",\n        dataIndex: col.dataIndex,\n        title: col.title,\n        key: col.key,\n        editing: isEditing(record),\n      }),\n    };\n  });\n  return (\n    <Form form={form} component={false}>\n      <Table\n        dataSource={props.data}\n        columns={mergedColumns}\n        rowKey=\"id\"\n        components={{\n          body: {\n            cell: EditableCell,\n          },\n        }}\n        loading={props.loading}\n        bordered\n        rowClassName=\"editable-row\"\n        pagination={{\n          onChange: cancel,\n        }}\n      />\n    </Form>\n  );\n};\n\nexport default ManagerData;\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":19},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'AuthContext' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]